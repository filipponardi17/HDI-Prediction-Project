knitr::opts_chunk$set(echo = TRUE)
data = load("W7R.rds")
data2 =  read.csv("human-development-index-hdi-2014.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
#names(W7R)
library(randomForest)
library(shapper)
library(GGally)
library(ggplot2)
library(mice)
library(VIM)
library(caret)
library(tidyr)
library(factoextra)
library(cluster)
library(mclust)
library(kernlab)
library(mice)
knitr::opts_chunk$set(echo = TRUE)
library(randomForest)
library(shapper)
library(GGally)
library(ggplot2)
library(mice)
library(VIM)
library(caret)
library(tidyr)
library(factoextra)
library(cluster)
library(mclust)
library(kernlab)
library(mice)
data = load("W7R.rds")
data2 =  read.csv("human-development-index-hdi-2014.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
#names(W7R)
rename_mapping <- c(
"Bolivia (Plurinational State of)" = "Bolivia",
"Bosnia and Herzegovina" = "Bosnia",
"Czech Republic" = "Czechia",
"Hong Kong, China (SAR)" = "HongKong-SAR",
"Iran (Islamic Republic of)" = "Iran",
"Korea (Republic of)" = "South-Korea",
"New Zealand" = "New-Zealand",
"Russian Federation" = "Russia",
"Viet Nam" = "Vietnam",
"The former Yugoslav Republic of Macedonia" = "North-Macedonia",
"United Kingdom" = "Great-Britain",
"United States" = "United-States"
)
data2$Location <- ifelse(data2$Location %in% names(rename_mapping), rename_mapping[data2$Location], data2$Location)
W7R$HDI <- NA
for (i in 1:nrow(W7R)) {
country <- W7R$cntry_name[i]
match_rows <- which(data2$Location == country)
if (length(match_rows) > 0) {
W7R$HDI[i] <- data2$Human.Development.Index..HDI.[match_rows[1]]
}
}
# Check the updated W7R with the new 'HDI' column
print(unique(W7R$HDI))
rows_with_NA <- which(is.na(W7R$HDI))
# Extract corresponding country names for rows with NA HDI
countries_with_NA_HDI <- W7R$cntry_name[rows_with_NA]
# Show unique country names with NA HDI
unique_countries_with_NA_HDI <- unique(countries_with_NA_HDI)
unique_countries_with_NA_HDI
# Filter out rows in W7R that correspond to unique_countries_with_NA_HDI
W7R <- W7R[!(W7R$cntry_name %in% unique_countries_with_NA_HDI), ]
# Reset row names after filtering
rownames(W7R) <- NULL
#md.pattern(W7R)
#LET'S IMPUTE THE NAs
imputed_W7R <- mice(W7R, m = 5, maxit = 5, method = "pmm", seed = 123)
complete_W7R <- complete(imputed_W7R)
names(W7R)
dim(W7R)
str(W7R)
summary(W7R)
W7R <- W7R[, !(names(W7R) %in% c("incm_lvl", "edu_lvl", "E181_EVS5"))]
na_count <- colSums(is.na(W7R))
print(na_count)
na_count2 <- sum(is.na(W7R$HDI))
print(na_count2)
names(W7R)
#md.pattern(W7R)
#LET'S IMPUTE THE NAs
imputed_W7R <- mice(W7R, m = 5, maxit = 5, method = "pmm", seed = 123)
complete_W7R <- complete(imputed_W7R)
save(complete_W7R, file= "complete_W7R.rda")
#load("complete_W7R.rda")
#remove dupes
#imputed_data <- complete_W7R[!duplicated(complete_W7R), ]
#let's make sure we have no NAs
#na_count <- colSums(is.na(imputed_data))
#print(na_count)
gc()
#LET'S IMPUTE THE NAs
# imputed_W7R <- mice(W7R, m = 5, maxit = 5, method = "pmm", seed = 123)
#
# complete_W7R <- complete(imputed_W7R)
#
# save(complete_W7R, file= "complete_W7R.rda")
load("complete_W7R.rda")
imputed_data <- complete_W7R[!duplicated(complete_W7R), ]
imputed_data <- complete_W7R[!duplicated(complete_W7R), ]
na_count <- colSums(is.na(imputed_data))
print(na_count)
imputed_data <- imputed_data[, !names(imputed_data) %in% "cntry_name"]
scaled_df <- scale(imputed_data)
scaled_df <- scale(imputed_data)
set.seed(123)
set.seed(123)
rf = randomForest(HDI ~ ., data=scaled_df, na.action = na.roughfix,
proximity = T,
ntree=500, mtry=4, importance=TRUE)
